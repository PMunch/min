; Imports
'str       import
'io        import
'logic     import
'num       import
'sys       import
'time      import
'fs        import
'crypto    import

; Aliases
'exit         :quit
'==           :eq
'!=           :noteq
'>            :gt
'<            :lt
'>=           :gte
'<=           :lte
'puts         :echo
'pop          :zap
'quote        :unit
'unquote      :i
'unquote      :apply
'filter       :select
'cons         :prepend
'size         :length

('quit 'eq 'noteq 'gt 'lt 'gte 'lte 'echo 'zap 'unit 'i 'apply 'select 'prepend 'length) 'seal foreach

; Mathematical Operators
(1 +)           :succ
(1 -)           :pred
(2 mod 0 ==)    :even?
(even? not)     :odd?

('succ 'pred 'even? 'odd?) 'seal foreach

; Stack Operators
(swap cons)                       :swons
((pop) dip)                       :popd
((dup) dip)                       :dupd
((swap) dip)                      :swapd
((dup) dip i)                     :q
((zap) dip i)                     :k
((cons) dip i)                    :b
((swap) dip i)                    :c
((dip) cons cons)                 :take
(() cons dip)                     :dig1
(() cons cons dip)                :dig2
(() cons cons cons dip)           :dig3
((() cons) dip swap i)            :bury1
((() cons cons) dip swap i)       :bury2
((() cons cons cons) dip swap i)  :bury3

('swons 'popd 'dupd 'swapd 'q 'k 'b 'c 'take 'dig1 'dig2 'dig3 'bury1 'bury2 'bury3) 'seal foreach

; Other
(print pop)                                    :print!
(dprint pop)                                   :dprint!
(puts pop)                                     :puts!
(call pop)                                     :call!
(:ms :q :check (check) (ms sleep q) while)     :interval
(password aes encode)                          :encrypt
(decode password aes)                          :decrypt

('print! 'dprint! 'puts! 'call! 'interval 'encrypt 'decrypt) 'seal foreach


; Unsealed symbols
()                                :startup
("[$1]$$ " (.) %)                 :prompt

; Load all stored symbols

stored-symbols ('load-symbol ROOT with) foreach
'startup ROOT with
