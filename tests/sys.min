'test load
'test import

"sys" describe

  ("dir1" mkdir "dir1" dir?) assert

  ("dir1" "dir2" mv "dir2" dir?) assert

  ("dir1" dir? false ==) assert

  ("dir2" "dir1" cp "dir1" dir?) assert

  ("..." "dir1/test.txt" fwrite "dir1/test.txt" file?) assert

  ("dir1/test.txt" "dir2" mv "dir2/test.txt" file?)  assert

  ("dir1/test.txt" file? false ==) assert

  ("dir2/test.txt" "dir1" cp "dir1/test.txt" file?)  assert

  ('dir1 ls 'filename map ("test.txt") ==) assert

  ('dir2 ls 'dirname map ("dir2") ==) assert

  ('dir1 rmdir 'dir2 rmdir 'dir1 dir? 'dir2 dir? or false ==) assert  

  ("systest" mkdir . ls (. "systest") => "/" join contains) assert

  ("systest" cd . "systest" match) assert
  .. cd

  ("minim -v" & 'output dget "\." match) assert

  ("PATH" env?) assert

  ($PATH length 0 >) assert

  ("TEST" "AAA" putenv $AAA "TEST" ==) assert

  (os length 0 >) assert

  (cpu length 0 >) assert

  ("TEST" "test.txt" fwrite "test.txt" file?) assert

  ("systest" exists?) assert

  ("systest" dir?) assert

  ("test.txt" "test2.txt" cp "test2.txt" file?) assert

  ("test.txt" "test1.txt" mv "test1.txt" file?) assert

  ("test2.txt" rm "test1.txt" rm . ls (. "test1.txt") => "/" join contains :t1 . ls "test2" contains t1 and false ==) assert

  ("systest" cd 
   "TEST" "test.txt" fwrite
   "TEST1" "test1.txt" fwrite
   "TEST2" "test2.txt" fwrite
   "TEST3" "test3.txt" fwrite
   . ls "test.zip" zip . ls (. "test.zip") => "/" join contains) assert

   ("test.zip" "extracted" unzip "extracted" ls "extracted/test1.txt" contains) assert

  "extracted" ls 'rm foreach
  . ls 'rm foreach
  .. cd 

  ("systest" rmdir . ls (. "systest") => "/" join contains false ==) assert

  

  report
  newstack
  "systest" rmdir
