'test load
'test import

"str" describe
  
  ("$1 - $2 - $3" (1 true "test") interpolate "1 - true - test" ==) assert

  (" test   " strip "test" ==) assert

  ("test" length 4 ==) assert

  ("a,b,c" "," split ("a" "b" "c") ==) assert

  ("test #1" "[0-9]" search ("1") ==) assert 

  ("This is test #1" "test #([0-9])" search ("test #1" "1") ==) assert 

  ("This is a random string" "random" match true ==) assert

  ("something is not something else" "some" "any" replace "anything is not anything else" ==) assert

  ("MiNiM is a concatenative programming language" "/^minim/i" =~ ("MiNiM") ==) assert

  ("This is a difficult test" "s/difficult/simple/" =~ ("This is a simple test") ==) assert

  ("This is a DIFFICULT\n test" "s/difficult/simple/mis" =~ ("This is a simple\n test") ==) assert

  ("this is a test" uppercase "THIS IS A TEST" ==) assert

  ("THIS IS A TEST" lowercase "this is a test" ==) assert

  ("test" capitalize "Test" ==) assert

  ("this is a test" titleize "This Is A Test" ==) assert

  ("+" 3 repeat "+++" ==) assert

  ("test" 4 indent "    test" ==) assert

  ((1 3 "test") ", " join "1, 3, test" ==) assert

  (3 string "3" ==) assert
  
  ("false" bool false ==) assert
  
  ("" bool false ==) assert
  
  (0 bool false ==) assert
  
  (false bool false ==) assert
  
  (0.0 bool false ==) assert
  
  ("something" bool true ==) assert

  ("345" int 345 ==) assert

  (true int 1 ==) assert

  (3.5 int 3 ==) assert

  (3.5 float 3.5 ==) assert

  (3 float 3.0 ==) assert

  (false float 0.0 ==) assert

  ("3.678" float 3.678 ==) assert

  report
  newstack
